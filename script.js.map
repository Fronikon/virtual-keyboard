{"version":3,"file":"script.js","mappings":"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","sources":["webpack://my-webpack-project/./src/Keyboard.js","webpack://my-webpack-project/./src/index.js","webpack://my-webpack-project/./src/keysData.js"],"sourcesContent":["class Keyboard {\n  constructor(lang, keysData, textArea) {\n    this.lang = lang;\n    this.keysData = keysData;\n    this.textArea = textArea;\n    this.isShift = false;\n    this.isCaps = false;\n    this.keyboardElement = null;\n    this.keys = new Map();\n    document.isShift = this.isShift;\n  }\n\n  createKeyboard() {\n    const keyboard = document.createElement('div');\n    keyboard.classList.add('keyboard');\n    this.keyboardElement = keyboard;\n    return keyboard;\n  }\n\n  activateKeyFunction(keyData, element) {\n    function getCurrentPosition(textarea) {\n      if (textarea.selectionStart) {\n        return textarea.selectionStart;\n      }\n      return 0;\n    }\n\n    function resetCursor(textElement, currentPos) {\n      if (textElement.setSelectionRange) {\n        textElement.focus();\n        textElement.setSelectionRange(currentPos, currentPos);\n      } else if (textElement.createTextRange) {\n        const range = textElement.createTextRange();\n        range.moveStart('character', currentPos);\n        range.select();\n      }\n    }\n\n    const updateText = (letter) => {\n      const { textArea } = this;\n      const text = textArea.value;\n      const currentPos = getCurrentPosition(textArea);\n      const textbefore = text.substring(0, currentPos);\n      const textAfter = text.substring(currentPos, text.length);\n\n      if (currentPos === textArea.value.length) {\n        textArea.scrollTop = textArea.scrollHeight;\n      }\n\n      const newText = textbefore + letter + textAfter;\n      textArea.value = newText;\n\n      resetCursor(textArea, currentPos + letter.length);\n    };\n\n    switch (keyData.keyCode) {\n      case 'Backspace': {\n        const text = this.textArea.value;\n        const currentPos = getCurrentPosition(this.textArea);\n        this.textArea.focus();\n\n        if (text.length > 0 && currentPos !== 0) {\n          const textbefore = text.substring(0, currentPos - 1);\n          const textAfter = text.substring(currentPos, text.length);\n\n          const backSpace = textbefore + textAfter;\n          this.textArea.value = backSpace;\n          resetCursor(this.textArea, currentPos - 1);\n        }\n\n        break;\n      }\n\n      case 'Delete': {\n        const text = this.textArea.value;\n        const currentPos = getCurrentPosition(this.textArea);\n        this.textArea.focus();\n\n        if (text.length > 0 && currentPos !== text.length) {\n          const textbefore = text.substring(0, currentPos);\n          const textAfter = text.substring(currentPos + 1, text.length);\n\n          const formatedText = textbefore + textAfter;\n          this.textArea.value = formatedText;\n          resetCursor(this.textArea, currentPos);\n        }\n\n        break;\n      }\n\n      case 'Enter': {\n        updateText('\\n');\n\n        break;\n      }\n\n      case 'CapsLock': {\n        this.isShift = !this.isShift;\n        this.isCaps = !this.isCaps;\n\n        element.classList.toggle('active_capslock');\n\n        this.render();\n\n        break;\n      }\n\n      case 'switchLang': {\n        if (this.lang === 'ru') {\n          this.lang = 'en';\n        } else {\n          this.lang = 'ru';\n        }\n        this.render();\n\n        break;\n      }\n\n      case 'ArrowUp': {\n        updateText(keyData.general);\n        break;\n      }\n      case 'ArrowDown': {\n        updateText(keyData.general);\n        break;\n      }\n      case 'ArrowLeft': {\n        updateText(keyData.general);\n        break;\n      }\n      case 'ArrowRight': {\n        updateText(keyData.general);\n        break;\n      }\n\n      case 'ShiftLeft': {\n        break;\n      }\n      case 'ShiftRight': {\n        break;\n      }\n      case 'Tab': {\n        updateText('  ');\n        break;\n      }\n      case 'ControlRight': {\n        break;\n      }\n      case 'ControlLeft': {\n        break;\n      }\n      case 'AltLeft': {\n        break;\n      }\n      case 'AltRight': {\n        break;\n      }\n\n      default:\n        updateText(keyData[this.isShift === true ? 'shift' : 'common'][this.lang]);\n\n        break;\n    }\n  }\n\n  addListener() {\n    this.keyboardElement.addEventListener('click', (event) => {\n      if (event.target.classList.contains('key')) {\n        const keyData = this.keys.get(event.target);\n        this.activateKeyFunction(keyData, event.target);\n      }\n    });\n\n    this.textArea.onkeydown = () => false;\n\n    const pressedKeys = new Map();\n\n    document.addEventListener('keydown', (event) => {\n      if (!pressedKeys.has(event.code)) {\n        if (event.code === 'ShiftLeft' || event.code === 'ShiftRight') {\n          this.isShift = !this.isShift;\n          this.render();\n        }\n\n        this.keys.forEach((value, key) => {\n          if (value.keyCode === event.code) {\n            key.classList.add('active_key');\n            pressedKeys.set(event.code, [key, value]);\n          }\n        });\n      }\n    });\n\n    document.addEventListener('keyup', (event) => {\n      if (pressedKeys.has('ShiftLeft') && pressedKeys.has('AltLeft')) {\n        this.lang = this.lang === 'ru' ? 'en' : 'ru';\n        this.render();\n      }\n\n      if (pressedKeys.has(event.code)) {\n        if (event.code === 'ShiftLeft' || event.code === 'ShiftRight') {\n          this.isShift = !this.isShift;\n          this.render();\n        }\n\n        const entry = pressedKeys.get(event.code);\n        entry[0].classList.remove('active_key');\n        this.activateKeyFunction(entry[1], entry[0]);\n        pressedKeys.delete(event.code);\n      }\n    });\n  }\n\n  createKey(value) {\n    const generalKey = ['Tab', 'CapsLock', 'ShiftLeft', 'ControlLeft', 'AltLeft', 'Space', 'AltRight', 'ControlRight', 'Delete', 'Enter', 'Backspace'];\n    let keyValue;\n\n    if (value.general) {\n      keyValue = value.general;\n    } else if (this.isShift) {\n      keyValue = value.shift[this.lang];\n    } else {\n      keyValue = value.common[this.lang];\n    }\n\n    const key = document.createElement('div');\n    key.classList.add('key');\n\n    if (value.keyCode === 'ShiftLeft' || value.keyCode === 'ShiftRight') {\n      key.addEventListener('mousedown', () => {\n        this.isShift = !this.isShift;\n        this.render();\n\n        const func = () => {\n          this.isShift = !this.isShift;\n          this.render();\n          document.removeEventListener('mouseup', func);\n        };\n\n        document.addEventListener('mouseup', func);\n      });\n    }\n\n    if (generalKey.includes(value.keyCode)) {\n      key.classList.add('general_key');\n      if (value.keyCode === 'Space') {\n        key.classList.add('space');\n      }\n    }\n\n    key.textContent = keyValue;\n    this.keys.set(key, value);\n    return key;\n  }\n\n  addKeys() {\n    function createRow() {\n      const row = document.createElement('div');\n      row.classList.add('keyboard_row');\n      return row;\n    }\n\n    this.keysData.forEach((row) => {\n      const newRow = createRow();\n\n      row.forEach((key) => {\n        const newKey = this.createKey(key);\n        newRow.append(newKey);\n      });\n\n      this.keyboardElement.append(newRow);\n    });\n  }\n\n  render() {\n    this.keys.forEach((value, key) => {\n      const currentKey = key;\n      let newText;\n      if (value.general) {\n        newText = value.general;\n      } else {\n        newText = value[this.isShift ? 'shift' : 'common'][this.lang];\n      }\n      currentKey.textContent = newText;\n    });\n  }\n}\n\nexport default Keyboard;\n","import './style.scss';\nimport Keyboard from './Keyboard';\nimport keysData from './keysData';\n\nconst currentLang = localStorage.getItem('lang') || 'en';\n\nconst createElement = (tag, selector, text) => {\n  const newElement = document.createElement(tag);\n  newElement.classList.add(selector);\n  if (text) {\n    newElement.textContent = text;\n  }\n  return newElement;\n};\n\nconst textAreaWraper = createElement('div', 'textarea_wraper');\nconst textArea = createElement('textarea', 'textarea');\nconst keyboardDescription = createElement('div', 'keyboard_description');\nconst keyboardControl = createElement('span', 'keyboard_control', 'Language change: \"Shift + Alt\"');\nconst buttonClear = createElement('button', 'button_clear', 'Clear Textarea');\nconst keyboardMade = createElement('span', 'keyboard_made', 'Keyboard create for Windows.');\n\ndocument.body.append(textAreaWraper);\ntextAreaWraper.append(textArea);\ntextAreaWraper.append(keyboardDescription);\nkeyboardDescription.append(keyboardControl);\nkeyboardDescription.append(buttonClear);\nkeyboardDescription.append(keyboardMade);\n\nconst keyboard = new Keyboard(currentLang, keysData, textArea);\ndocument.body.append(keyboard.createKeyboard());\nkeyboard.addListener();\nkeyboard.addKeys();\n\nbuttonClear.addEventListener('click', () => {\n  textArea.value = '';\n});\n\nwindow.addEventListener('unload', () => {\n  localStorage.setItem('lang', keyboard.lang);\n});\n","const keysData = [\n  [\n    {\n      keyCode: 'Backquote',\n      common: {\n        en: '`',\n        ru: 'ё',\n      },\n      shift: {\n        en: '~',\n        ru: 'Ё',\n      },\n    },\n    {\n      keyCode: 'Digit1',\n      common: {\n        en: '1',\n        ru: '1',\n      },\n      shift: {\n        en: '!',\n        ru: '!',\n      },\n    },\n    {\n      keyCode: 'Digit2',\n      common: {\n        en: '2',\n        ru: '2',\n      },\n      shift: {\n        en: '@',\n        ru: '\"',\n      },\n    },\n    {\n      keyCode: 'Digit3',\n      common: {\n        en: '3',\n        ru: '3',\n      },\n      shift: {\n        en: '#',\n        ru: '№',\n      },\n    },\n    {\n      keyCode: 'Digit4',\n      common: {\n        en: '4',\n        ru: '4',\n      },\n      shift: {\n        en: '$',\n        ru: ';',\n      },\n    },\n    {\n      keyCode: 'Digit5',\n      common: {\n        en: '5',\n        ru: '5',\n      },\n      shift: {\n        en: '%',\n        ru: '%',\n      },\n    },\n    {\n      keyCode: 'Digit6',\n      common: {\n        en: '6',\n        ru: '6',\n      },\n      shift: {\n        en: '^',\n        ru: ':',\n      },\n    },\n    {\n      keyCode: 'Digit7',\n      common: {\n        en: '7',\n        ru: '7',\n      },\n      shift: {\n        en: '&',\n        ru: '?',\n      },\n    },\n    {\n      keyCode: 'Digit8',\n      common: {\n        en: '8',\n        ru: '8',\n      },\n      shift: {\n        en: '*',\n        ru: '*',\n      },\n    },\n    {\n      keyCode: 'Digit9',\n      common: {\n        en: '9',\n        ru: '9',\n      },\n      shift: {\n        en: '(',\n        ru: '(',\n      },\n    },\n    {\n      keyCode: 'Digit0',\n      common: {\n        en: '0',\n        ru: '0',\n      },\n      shift: {\n        en: ')',\n        ru: ')',\n      },\n    },\n    {\n      keyCode: 'Minus',\n      common: {\n        en: '-',\n        ru: '-',\n      },\n      shift: {\n        en: '_',\n        ru: '_',\n      },\n    },\n    {\n      keyCode: 'Equal',\n      common: {\n        en: '=',\n        ru: '=',\n      },\n      shift: {\n        en: '+',\n        ru: '+',\n      },\n    },\n    {\n      keyCode: 'Backspace',\n      general: '⌫',\n    },\n  ],\n  [\n    {\n      keyCode: 'Tab',\n      general: '↹',\n    },\n    {\n      keyCode: 'KeyQ',\n      common: {\n        en: 'q',\n        ru: 'й',\n      },\n      shift: {\n        en: 'Q',\n        ru: 'Й',\n      },\n    },\n    {\n      keyCode: 'KeyW',\n      common: {\n        en: 'w',\n        ru: 'ц',\n      },\n      shift: {\n        en: 'W',\n        ru: 'Ц',\n      },\n    },\n    {\n      keyCode: 'KeyE',\n      common: {\n        en: 'e',\n        ru: 'у',\n      },\n      shift: {\n        en: 'E',\n        ru: 'У',\n      },\n    },\n    {\n      keyCode: 'KeyR',\n      common: {\n        en: 'r',\n        ru: 'к',\n      },\n      shift: {\n        en: 'R',\n        ru: 'К',\n      },\n    },\n    {\n      keyCode: 'KeyT',\n      common: {\n        en: 't',\n        ru: 'е',\n      },\n      shift: {\n        en: 'T',\n        ru: 'Е',\n      },\n    },\n    {\n      keyCode: 'KeyY',\n      common: {\n        en: 'y',\n        ru: 'н',\n      },\n      shift: {\n        en: 'Y',\n        ru: 'Н',\n      },\n    },\n    {\n      keyCode: 'KeyU',\n      common: {\n        en: 'u',\n        ru: 'г',\n      },\n      shift: {\n        en: 'U',\n        ru: 'Г',\n      },\n    },\n    {\n      keyCode: 'KeyI',\n      common: {\n        en: 'i',\n        ru: 'ш',\n      },\n      shift: {\n        en: 'I',\n        ru: 'Ш',\n      },\n    },\n    {\n      keyCode: 'KeyO',\n      common: {\n        en: 'o',\n        ru: 'щ',\n      },\n      shift: {\n        en: 'O',\n        ru: 'Щ',\n      },\n    },\n    {\n      keyCode: 'KeyP',\n      common: {\n        en: 'p',\n        ru: 'з',\n      },\n      shift: {\n        en: 'P',\n        ru: 'З',\n      },\n    },\n    {\n      keyCode: 'BracketLeft',\n      common: {\n        en: '[',\n        ru: 'х',\n      },\n      shift: {\n        en: '{',\n        ru: 'Х',\n      },\n    },\n    {\n      keyCode: 'BracketRight',\n      common: {\n        en: ']',\n        ru: 'ъ',\n      },\n      shift: {\n        en: '}',\n        ru: 'Ъ',\n      },\n    },\n    {\n      keyCode: 'Delete',\n      general: 'Del',\n    },\n  ],\n  [\n    {\n      keyCode: 'CapsLock',\n      general: '⇪',\n    },\n    {\n      keyCode: 'KeyA',\n      common: {\n        en: 'a',\n        ru: 'ф',\n      },\n      shift: {\n        en: 'A',\n        ru: 'Ф',\n      },\n    },\n    {\n      keyCode: 'KeyS',\n      common: {\n        en: 's',\n        ru: 'ы',\n      },\n      shift: {\n        en: 'S',\n        ru: 'Ы',\n      },\n    },\n    {\n      keyCode: 'KeyD',\n      common: {\n        en: 'd',\n        ru: 'в',\n      },\n      shift: {\n        en: 'D',\n        ru: 'В',\n      },\n    },\n    {\n      keyCode: 'KeyF',\n      common: {\n        en: 'f',\n        ru: 'а',\n      },\n      shift: {\n        en: 'F',\n        ru: 'А',\n      },\n    },\n    {\n      keyCode: 'KeyG',\n      common: {\n        en: 'g',\n        ru: 'п',\n      },\n      shift: {\n        en: 'G',\n        ru: 'П',\n      },\n    },\n    {\n      keyCode: 'KeyH',\n      common: {\n        en: 'h',\n        ru: 'р',\n      },\n      shift: {\n        en: 'H',\n        ru: 'Р',\n      },\n    },\n    {\n      keyCode: 'KeyJ',\n      common: {\n        en: 'j',\n        ru: 'о',\n      },\n      shift: {\n        en: 'J',\n        ru: 'О',\n      },\n    },\n    {\n      keyCode: 'KeyK',\n      common: {\n        en: 'k',\n        ru: 'л',\n      },\n      shift: {\n        en: 'K',\n        ru: 'Л',\n      },\n    },\n    {\n      keyCode: 'KeyL',\n      common: {\n        en: 'l',\n        ru: 'д',\n      },\n      shift: {\n        en: 'L',\n        ru: 'Д',\n      },\n    },\n    {\n      keyCode: 'Semicolon',\n      common: {\n        en: ';',\n        ru: 'ж',\n      },\n      shift: {\n        en: ':',\n        ru: 'Ж',\n      },\n    },\n    {\n      keyCode: 'Quote',\n      common: {\n        en: '\\'',\n        ru: 'э',\n      },\n      shift: {\n        en: '\"',\n        ru: 'Э',\n      },\n    },\n    {\n      keyCode: 'Enter',\n      general: 'Enter',\n    },\n  ],\n  [\n    {\n      keyCode: 'ShiftLeft',\n      general: '⇧',\n    },\n    {\n      keyCode: 'KeyZ',\n      common: {\n        en: 'z',\n        ru: 'я',\n      },\n      shift: {\n        en: 'Z',\n        ru: 'Я',\n      },\n    },\n    {\n      keyCode: 'KeyX',\n      common: {\n        en: 'x',\n        ru: 'ч',\n      },\n      shift: {\n        en: 'X',\n        ru: 'Ч',\n      },\n    },\n    {\n      keyCode: 'KeyC',\n      common: {\n        en: 'c',\n        ru: 'с',\n      },\n      shift: {\n        en: 'C',\n        ru: 'С',\n      },\n    },\n    {\n      keyCode: 'KeyV',\n      common: {\n        en: 'v',\n        ru: 'м',\n      },\n      shift: {\n        en: 'V',\n        ru: 'М',\n      },\n    },\n    {\n      keyCode: 'KeyB',\n      common: {\n        en: 'b',\n        ru: 'и',\n      },\n      shift: {\n        en: 'B',\n        ru: 'И',\n      },\n    },\n    {\n      keyCode: 'KeyN',\n      common: {\n        en: 'n',\n        ru: 'т',\n      },\n      shift: {\n        en: 'N',\n        ru: 'Т',\n      },\n    },\n    {\n      keyCode: 'KeyM',\n      common: {\n        en: 'm',\n        ru: 'ь',\n      },\n      shift: {\n        en: 'M',\n        ru: 'Ь',\n      },\n    },\n    {\n      keyCode: 'Comma',\n      common: {\n        en: ',',\n        ru: 'б',\n      },\n      shift: {\n        en: '<',\n        ru: 'Б',\n      },\n    },\n    {\n      keyCode: 'Period',\n      common: {\n        en: '.',\n        ru: 'ю',\n      },\n      shift: {\n        en: '>',\n        ru: 'Ю',\n      },\n    },\n    {\n      keyCode: 'Slash',\n      common: {\n        en: '/',\n        ru: '.',\n      },\n      shift: {\n        en: '?',\n        ru: ',',\n      },\n    },\n    {\n      keyCode: 'Backslash',\n      common: {\n        en: '\\\\',\n        ru: '\\\\',\n      },\n      shift: {\n        en: '|',\n        ru: '/',\n      },\n    },\n    {\n      keyCode: 'ArrowUp',\n      general: '↑',\n    },\n    {\n      keyCode: 'ShiftRight',\n      general: '⇧',\n    },\n  ],\n  [\n    {\n      keyCode: 'ControlLeft',\n      general: 'CtrlL',\n    },\n    {\n      keyCode: 'AltLeft',\n      general: 'AltL',\n    },\n    {\n      keyCode: 'switchLang',\n      common: {\n        en: 'en',\n        ru: 'ru',\n      },\n      shift: {\n        en: 'en',\n        ru: 'ru',\n      },\n    },\n    {\n      keyCode: 'Space',\n      common: {\n        en: ' ',\n        ru: ' ',\n      },\n      shift: {\n        en: ' ',\n        ru: ' ',\n      },\n    },\n    {\n      keyCode: 'AltRight',\n      general: 'AltR',\n    },\n    {\n      keyCode: 'ControlRight',\n      general: 'CtrlR',\n    },\n    {\n      keyCode: 'ArrowLeft',\n      general: '←',\n    },\n    {\n      keyCode: 'ArrowDown',\n      general: '↓',\n    },\n    {\n      keyCode: 'ArrowRight',\n      general: '→',\n    },\n  ],\n];\n\nexport default keysData;\n"],"names":["Keyboard","lang","keysData","textArea","this","isShift","isCaps","keyboardElement","keys","Map","document","keyboard","createElement","classList","add","keyData","element","getCurrentPosition","textarea","selectionStart","resetCursor","textElement","currentPos","setSelectionRange","focus","createTextRange","range","moveStart","select","updateText","letter","text","value","textbefore","substring","textAfter","length","scrollTop","scrollHeight","newText","keyCode","backSpace","formatedText","toggle","render","general","addEventListener","event","target","contains","get","activateKeyFunction","onkeydown","pressedKeys","has","code","forEach","key","set","entry","remove","keyValue","shift","common","func","removeEventListener","includes","textContent","row","newRow","createRow","newKey","createKey","append","currentKey","currentLang","localStorage","getItem","tag","selector","newElement","textAreaWraper","keyboardDescription","keyboardControl","buttonClear","keyboardMade","body","en","ru","createKeyboard","addListener","addKeys","window","setItem"],"sourceRoot":""}